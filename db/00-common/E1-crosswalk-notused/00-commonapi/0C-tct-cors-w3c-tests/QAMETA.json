[
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_get", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check that the XMLHttpRequest supports CORS if the request method is get", 
    "description": "Check that the XMLHttpRequest supports CORS if the request method is get", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_get.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_post", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check that the XMLHttpRequest supports CORS if the request method is posted", 
    "description": "Check that the XMLHttpRequest supports CORS if the request method is posted", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_post.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_base", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if example of using XMLHttpRequest from a client-side Web application can cross origin share the resource", 
    "description": "Check if example of using XMLHttpRequest from a client-side Web application can cross origin share the resource", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_base.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_add_max_age", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if optionally add a single Access-Control-Max-Age header with as value the amount of seconds the user agent is allowed to cache the result of the request", 
    "description": "Check if optionally add a single Access-Control-Max-Age header with as value the amount of seconds the user agent is allowed to cache the result of the request", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_add_max_age.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_allow_credentials_true", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the response uses the value of the Origin header as value, and adds a single Access-Control-Allow-Credentials header with the literal string 'true' as value when the resource supports credentials add a single Access-Control-Allow-Origin header", 
    "description": "Check if the response uses the value of the Origin header as value, and adds a single Access-Control-Allow-Credentials header with the literal string 'true' as value when the resource supports credentials add a single Access-Control-Allow-Origin header", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_allow_credentials_true.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_credentials_false_origin", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the response adds a single Access-Control-Allow-Origin header and literal string '*' as value when the resource does not supports credentials add a single Access-Control-Allow-Origin header", 
    "description": "Check if the response adds a single Access-Control-Allow-Origin header and literal string '*' as value when the resource does not supports credentials add a single Access-Control-Allow-Origin header", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_credentials_false_origin.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_getResponseHeader_not_null", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the getResponseHeader() method of XMLHttpRequest will return valid value when the field name is an ASCII case-insensitive match for one of the values of the Access-Control-Expose-Headers headers", 
    "description": "Check if the getResponseHeader() method of XMLHttpRequest will return valid value when the field name is an ASCII case-insensitive match for one of the values of the Access-Control-Expose-Headers headers", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_getResponseHeader_not_null.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_getResponseHeader_null", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the getResponseHeader() method of XMLHttpRequest will return null when the field name does not match for one of the values of the Access-Control-Expose-Headers headers", 
    "description": "Check if the getResponseHeader() method of XMLHttpRequest will return null when the field name does not match for one of the values of the Access-Control-Expose-Headers headers", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_getResponseHeader_null.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_get_true", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the XMLHttpRequest supports CORS when the request method is get and async flag is true", 
    "description": "Check if the XMLHttpRequest supports CORS when the request method is get and async flag is true", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_get_true.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }, 
  {
    "launcher": null, 
    "name": "cors_XMLHttpRequest_post_true", 
    "exec_type": "auto", 
    "priority": "0", 
    "status": "designed", 
    "type": "compliance", 
    "subtype": "", 
    "objective": "Check if the XMLHttpRequest supports CORS when the request method is post and async flag is true", 
    "description": "Check if the XMLHttpRequest supports CORS when the request method is post and async flag is true", 
    "onload_delay": "0", 
    "pre_condition": "", 
    "steps": [], 
    "post_condition": "", 
    "notes": "", 
    "bugs": "", 
    "exec_pre": "", 
    "exec": "/opt/tct-cors-w3c-tests/cors/cors_XMLHttpRequest_post_true.html", 
    "exec_expected_retcode": "0", 
    "exec_kill_timeout": "0", 
    "exec_post": null, 
    "service": {}, 
    "author": "qadmin", 
    "ctime": "2014-12-05 19:25:58 GMT", 
    "mtime": ""
  }
]