/*
 * TKIT Testsuite class
 * Authors: Jose Bollo <jobol@nonadev.net>
 *          Nicolas Zingil√© <nicolas.zingile@open.eurogiciel.org>
 * Date: 2013-01-30
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

var _=require('underscore');
var util=require('util');
var log4js=require("log4js");
var path=require("path");
var fs=require('fs');

var logger=log4js.getLogger("tkitsuite");

var TKIT=require('libtestkit');

var DEBUG=false;

/**************** A database is for a directory ***************/

/* creates the database for the root directory 'basedir' */
var Testsuite=module.exports=function(db,suite,filter) {

	this.db=db;
	this.suite=TKIT.utils.splat(suite);
	this.name=this.suite.join(":");
	this.filter=filter;

	// walk in db to find appropriate testcases
	// this.testsets is a table of objects {suite: testsuite, set: ts} 
	this.testsets = [];
	this.suite.forEach(function(dir){
		this.db.getTestsets(dir,this.filter).forEach(function(ts){
			if(!ts.isEmpty())
				this.testsets.push({ "suite": this, "set": ts});
		},this);
	},this);

	logger.info("Selected testsets:\n - "+this.testsets.map(function(ts) { return ts.set.getDirPath(); }).join("\n - "));
}

/*
Return true if the testsuite is empty.
*/
Testsuite.prototype.isEmpty=function() {
	return (this.testsets.length==0);
}

/* 
returns the name of the suite 
*/
Testsuite.prototype.getName=function(){
	return this.name;
}

/*
returns the database directory on the local filesystem
*/
Testsuite.prototype.getDir=function(){
	return this.db.getDir();
}

/*
Call 'cb' with this set to 'thisArg' and with first parameter a Testset
for each testset of the suite.
*/
Testsuite.prototype.forEachTestset=function(cb,thisArg){
	this.testsets.forEach(function(ts) { cb.call(thisArg,ts.set,ts.suite); });
}

/*
Call 'cb' with this set to 'thisArg' and with first parameter a Testcase
for each testcase of the suite.
*/
Testsuite.prototype.forEachTestcase=function(cb,thisArg){
	this.forEachTestset(function(ts){ts.forEachTestcase(cb,thisArg);});
}

/* returns the list of the files to tar */
Testsuite.prototype.getTarFileList=function() {
	return this.db.getTarFileList(this.testsets);
}

