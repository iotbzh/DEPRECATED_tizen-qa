#!/bin/bash 

NAME=$(basename $0)

function error() {
	echo ERROR: "$@" >&2
	echo "Usage: $NAME <repository url>" >&2
	echo "example: $NAME https://user:pass@download.tz.otcshare.org/snapshots/trunk/pc/latest" >&2
	exit 1
}

function info() {
	echo "$@" >&2
}

[ $# -eq 0 ] && error "Invalid repository URL"

function get_repo_release() {
	XMLSTARTLET=$(which xml || which xmlstarlet)

	# use builddata (on tizen.org or tz.otcshare.org)
	local rev
	rev=$(curl --silent $1/build.xml | $XMLSTARTLET sel  -t -v "/build/id/text()" 2>/dev/null)
	[[ -n "$rev" ]] && { echo $rev; return; }

	# use builddata with old scheme (on tizen.org or tz.otcshare.org)
	rev=$(curl --silent $1/builddata/build.xml | $XMLSTARTLET sel  -t -v "/build/id/text()" 2>/dev/null)
	[[ -n "$rev" ]] && { echo $rev; return; }

	# try to use repodata
	local ts
	ts=$(curl --silent $1/repodata/repomd.xml | $XMLSTARTLET sel -N r=http://linux.duke.edu/metadata/repo -t -v "/r:repomd/r:revision/text()" 2>/dev/null)
	[[ -n "$ts" ]] && { echo ${branch}_$(date +%Y%m%d.%H%M -d "@$ts"); return; }
	
	# bail out
	echo ${branch}_$(date +%Y%m%d.%H%M)
}

echo $(get_repo_release $1)
