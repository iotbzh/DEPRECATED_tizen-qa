/*
 * TCBROWSE is a browser and editor of test cases
 *
 * This skeleton was generate by express
 * Authors: José Bollo <jobol@nonadev.net>, Stéphane Desneux <sdx@kooltux.org>
 *
 * --------------------------------------------------------------------------------
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
*/

var express = require('express')
  , routes = require('./routes')
  , http = require('http')
  , path = require('path')
 ;

var tcbrowse = express();

tcbrowse.configure(function(){
  tcbrowse.set('port', process.env.PORT || 3000);
  tcbrowse.set('views', __dirname + '/views');
  tcbrowse.set('view engine', 'ejs');
  tcbrowse.use(express.favicon());
  tcbrowse.use(express.logger('dev'));
  tcbrowse.use(express.bodyParser());
  tcbrowse.use(express.methodOverride());
  tcbrowse.use(express.cookieParser('your secret here'));
  tcbrowse.use(express.session());
  tcbrowse.use(tcbrowse.router);
  tcbrowse.use(require('stylus').middleware(__dirname + '/public'));
  tcbrowse.use(express.static(path.join(__dirname, 'public')));
});

tcbrowse.configure('development', function(){
  tcbrowse.use(express.errorHandler());
});

tcbrowse.get('/', routes.index);
tcbrowse.get(/^\/dir\/(.*)$/, routes.dir);
tcbrowse.get(/^\/meta\/(.*)$/, routes.meta);
tcbrowse.post(/^\/dpost\/(.*)$/, routes.dpost);
tcbrowse.post(/^\/mpost\/(.*)$/, routes.mpost);

console.log(tcbrowse.routes);

http.createServer(tcbrowse).listen(tcbrowse.get('port'), function(){
  console.log("Express server listening on port " + tcbrowse.get('port'));
});
