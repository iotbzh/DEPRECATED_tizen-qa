/*
 * QA Executor plugin: None (no execution)
 * Author: St√©phane Desneux <sdx@kooltux.org>
 * Date: 2013-01-10
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

var _=require('underscore');
var util=require('util');
var log4js=require("log4js");
var path=require("path");
var fs=require('fs');

var logger=log4js.getLogger("qanone");

var QA=require('libqa');

var DEBUG=false;

var Plugin=module.exports=function(opts) {
    // plugin specific options
    _.extend(this,
		_.extend({},opts)
    );
}

// plugin API
Plugin.prototype.setId=function(id) {
    DEBUG && logger.debug("Plugin id: "+id);
    this.id=id;
}

Plugin.prototype.setOutput=function(output) {
    DEBUG && logger.debug("Plugin output: "+output);
    this.output=output;
}

Plugin.prototype.setDryrun=function(dry) {
    this.dryrun=dry;
}

/* ============= prepare step ======================== */
Plugin.prototype.prepare=function(ctx,cb) {
    // nothing done here
	logger.info("Nothing to prepare");
	cb();
}

/* ============= execute step ======================== */
Plugin.prototype.execute=function(ctx,cb) {
    // nothing done here
	logger.info("Nothing to execute");
	cb();
}

/* ============= result step ======================== */
Plugin.prototype.getResult=function(ctx,cb) {
    // nothing done here
	logger.info("No results");
    cb(false,null);
}

/* ============= cleanup step ======================== */
Plugin.prototype.cleanup=function(ctx,cb) {
    // nothing done here
	logger.info("Nothing to clean");
    cb(false);
}

