/*
 * QA Text Export class
 * Author: St√©phane Desneux <sdx@kooltux.org>
 * Date: 2013-02-06
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

var _=require('underscore');
var util=require('util');
var log4js=require("log4js");

var logger=log4js.getLogger("qaexptext");

var QA=require('libqa');

var DEBUG=false;

/* -------------- writer class --------------- */
function Writer(cfg) {
	this.buffer="";

	this.options=_.extend({
		tab: "   "
	},cfg||{});

	this.reset();
}

Writer.prototype.reset=function() {
	this._indent=[];
	this._suffix=[];
	this._prefix=[];
}

Writer.prototype.write=function() {
	Array.prototype.forEach.call(arguments,function(x,idx) {
		if (x instanceof Array) {
			this.write("[");
			this.indent(1);
			x.forEach(function(v) {
				this.write(v);
			},this);
			this.indent(-1);
			this.write("]");
		}
		else if (typeof x == 'object' && x!==null) {
			this.write("{");
			this.indent(1);
			_.keys(x).forEach(function(k) {
				this.write(k,": ",x[k]);
			},this);
			this.indent(-1);
			this.write("}");
		}
		else if (idx == 0) {
			this.buffer+=this._indent.join("");
			this.buffer+=this._prefix.join("");
			this.buffer+=x;
		}
		else {
			this.buffer+=x;
		}
	},this);

	this.buffer+=this._suffix.join("");
}

Writer.prototype.writeln=function() {
	this._suffix.push("\n");
	this.write.apply(this,arguments);
	this._suffix.pop();
}

Writer.prototype.indent=function(n) {
	n=n||1;

	if (n>0) {
		for (var i=0; i<n; i++) {
			this._indent.push(this.options.tab);
		}
	}
	else {
		for (var i=0; i>n; i--) {
			this._indent.pop();
		}
	}
}

/* ------------------ plugin default options ---------------- */
var DEFAULTS={
};

/* ------------------ plugin class ---------------- */

var Plugin=module.exports=function(opts) {
	_.extend(this,
		_.extend(DEFAULTS,opts || {})
	);
}

Plugin.prototype.setId=function(id) {
	DEBUG && logger.debug("Plugin id: "+id);
	this.id=id;
}

Plugin.prototype.getFilename=function() {
	return "export_"+this.id+".txt";
}

Plugin.prototype.execute=function(testsuite,cb) {
	var w=new Writer();

	w.writeln("Test Suite: "+testsuite.getName());
	testsuite.forEachTestset(function(tset) {
		w.indent();
		w.writeln("Test Set: "+tset.getComponentName()+" ("+tset.getId()+")");
		
		tset.forEachTestcase(function(tcase) {
			w.indent();
			var obj=tcase.toExportable();

			w.writeln("Test Case: "+obj.id);

			w.indent();

			// remove some unneeded fields
			obj=_.omit(obj,['id','name']);

			for (var k in obj) {
				w.writeln(k,": ",obj[k]);
			}
			w.indent(-1);

			w.indent(-1);
		},this);
	
		w.indent(-1);
	},this);
	
	cb(w.buffer);
}

