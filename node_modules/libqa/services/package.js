/*
 * QA service package class
 * Author: Jose Bollo <jobol@nonadev.net>
 * Date: 2013-01-30
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

var _=require('underscore');
var log4js=require("log4js");
var exec=require('child_process').exec;

var logger=log4js.getLogger("qasrvpackage");

var QA=require('libqa');

var DEBUG=false;

var STATES={
	off: 'off',
	enabled: 'enabled',
	starting: 'starting',
	error: 'error',
	on: 'on'
};

/*
Creates the service 
*/
var Me=module.exports=function(manager,name) {
	logger.info("Activation of the service PACKAGE");
	this.manager=manager;
	this.name=name;
	this.packages={};
}

/*
Returns the name of the service.
*/
Me.prototype.getName=function(){
	return this.name;
}

/*
Set the required 'spec' of service for the testcase 'tc'.
 - 'spec' (Any): is something telling the requiring of service.
 - 'tc' (QA.Testcase): is the testcase that requires the service
*/
Me.prototype.addTestcase=function(spec,tc){
	QA.utils.splat(spec).forEach(function(name){
		this.packages[name]=true;
	    },this);
}

/*
*/
Me.prototype.start=function(cb){
	var list=_.keys(this.packages)
	if (list.length) {
		var host=this.manager.ctx.hwtarget.hostname;
		list=list.join(" ");
		logger.info("PACKAGE service installing "+list);
		exec("ssh root@"+host+" zypper -n in "+list,function(err,stdin,stderr){
			if (err) {
				logger.error("PACKAGE can't install, error: "+String(err));
				logger.error("PACKAGE details: "+stderr.toString());
				cb(err);
			}
			else {
				logger.info("PACKAGE install ok, details: "+stdin.toString());
				cb(0);
			}
		    });
	}
	else
		cb(0);
}

/*
*/
Me.prototype.stop=function(cb){
	cb();
}


