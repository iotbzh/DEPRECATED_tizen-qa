/*
 * QA Config class
 * Author: St√©phane Desneux <sdx@kooltux.org>
 * Date: 2013-02-06
 *
 * Copyright 2013, Intel Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

var _=require('underscore');
var util=require('util');
var log4js=require("log4js");
var path=require("path");
var fs=require('fs');

var logger=log4js.getLogger("qaconfig");

var QA=require('libqa');

var HW=require('libhardware');

var DEBUG=false;

var Config=module.exports=function(configdir) {
	// check config dir
	if (!fs.statSync(configdir).isDirectory())
		throw new Error("Invalid config dir '"+configdir+"'");
	this.configdir=configdir;

	// load config files
	_.extend(QA.GLOBALS,this.loadConfigFile("test_globals.conf",{}));

	var hwmgr=new HW.Manager(configdir);

	this.HWTARGETS=hwmgr.getDevices(); 
	this.PROFILES=this.loadConfigFile("test_suites.conf");
	this.REPORTS=this.loadConfigFile("test_reports.conf");
	this.EXECUTORS=this.loadConfigFile("test_exec.conf",{});
	this.EXPORTS=this.loadConfigFile("qaexport.conf",{});
}


Config.prototype.loadConfigFile=function(file,def) {
	var content, absfile=path.resolve(this.configdir,file);
	logger.info("Opening config file "+absfile);
	try {
		content=require(absfile);
	}
	catch(e) {
		if(def && typeof def == 'object'){
			content=def;
		}
		else{
			logger.error("Unable to open config file "+absfile+": "+e);
			throw e;
		}
	}

	if (typeof content != 'object') {
		logger.error("Invalid configuration in "+absfile+" (not an object as expected)");
		throw new Error("Invalid configuration "+absfile);
	}

	return content;
}

